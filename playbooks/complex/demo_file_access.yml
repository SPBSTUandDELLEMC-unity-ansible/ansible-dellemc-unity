---
- hosts: localhost
  tasks:
    - name: get disks
      virtualDisk:
       login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
       get:
         fields: id
      register: get_disks_results
    - debug: var=get_disks_results['output']['get']

    - name: Create pool
      pool:
        login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
        createVSA:
          name: test_pool
          addPoolUnitParameters: ["poolUnit": "{{ get_disks_results['output']['get'][0] }}", "poolUnit": "{{ get_disks_results['output']['get'][1] }}"]
          #[{"poolUnit" : {"id" : "vdisk_1"}}, {"poolUnit" : {"id" : "vdisk_2"}}] 
          #["poolUnit": "{{ get_disks_results['output']['get'][0] }}", "poolUnit": "{{ get_disks_results['output']['get'][1] }}"]
      register: create_pool_results
    - debug: var=create_pool_results['output']

    - name: create Nas Server
      nasServer:
         login:
           unityIP: "{{ host }}"
           username: "{{ username }}"
           password: "{{ password }}"
         create:
           name: nasServerFromPlaybook
           homeSP: {id: 'spa'}
           pool:  {id: "{{ create_pool_results['output']['createVSA']['id'] }}"}
           isMultiProtocolEnabled: false
      register: create_nas_server_results
    - debug: var=create_nas_server_results['output']

    - name: nfsServer creation
      nfsServer:
        login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
        create:
          nasServer: {id: "{{ create_nas_server_results['output']['create']['id'] }}"}
      register: create_nfs_server_results
    - debug: var=create_nfs_server_results['output']

    - name: create fileInterface
      fileInterface:
        login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
        create:
          nasServer: {id: "{{ create_nas_server_results['output']['create']['id'] }}"}
          ipPort: {id: "spa_eth0"}
          ipAddress: "{{ fileInterface_ip }}"
      register: file_interface_create_results
    - debug: var=file_interface_create_results['output']

    - name: create file system
      filesystem:
        login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
        create:
          name: file_system_created_by_playbook
          fsParameters:
            pool:  {id: "{{ create_pool_results['output']['createVSA']['id'] }}"}
            nasServer: {id: "{{ create_nas_server_results['output']['create']['id'] }}"}
            size: 5368709120 # size 5 GB
            supportedProtocols: 0
      register: file_system_create_results
    - debug: var=file_system_create_results['output']

    - name: create nfsShare
      nfsShare:
        login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
        create:
          storageResource: {'id': "{{ file_system_create_results['output']['create']['storageResource']['id'] }}"}
          name: nfsShareTestPlaybook
          path: '/'
      register: create_nfs_share_results
    - debug: var=create_nfs_share_results['output']
