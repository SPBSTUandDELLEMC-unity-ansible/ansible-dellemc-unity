---
- hosts: localhost
  vars_files:
    - ../../group_vars/all
  tasks:
    - name: create replicationInterface 217
      replicationInterface:
        login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
        create:
          sp: {id: 'spa'}
          ipPort: {id: "spa_eth0"}
          ipAddress: "{{ replicationInterface_ip217 }}"
      register: replInterface1
    - debug: var=replInterface1['output']


    - name: create replicationInterface 218
      replicationInterface:
        login:
          unityIP: "{{ host2 }}"
          username: "{{ username }}"
          password: "{{ password }}"
        create:
          sp: {id: 'spa'}
          ipPort: {id: "spa_eth0"}
          ipAddress: "{{ replicationInterface_ip218 }}"
      register: replInterface2
    - debug: var=replInterface2['output']

    - name: create remoteSystem
      remoteSystem:
        login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
        create:
          #all of the further parameters are required. DellEMC documentation lies:)
          managementAddress: "{{ host2 }}"
          remoteUsername: "{{ username }}"
          remotePassword: "{{ password }}"
          localUsername: "{{ username }}"
          localPassword: "{{ password }}"
      register: create_remoteSystem
    - debug: var=create_remoteSystem['output']

    - name: Get nasServer id
      commonGetPost:
        login:
          unityIP: "{{ unity_host }}"
          username: "{{ unity_username }}"
          password: "{{ unity_password }}"
        get:
          resource_type: nasServer
          fields: id
      register: nasServer_id217
    - debug: var=nasServer_id217['output']['get'][0]['id']

    - name: Get nasServer id
      commonGetPost:
        login:
          unityIP: "{{ unity_host2 }}"
          username: "{{ unity_username }}"
          password: "{{ unity_password }}"
        get:
          resource_type: nasServer
          fields: id
      register: nasServer_id218
    - debug: var=nasServer_id218['output']['get'][0]['id']

    - name: Get remoteSystem id
      commonGetPost:
        login:
          unityIP: "{{ unity_host }}"
          username: "{{ unity_username }}"
          password: "{{ unity_password }}"
        get:
          resource_type: remoteSystem
          fields: id
      register: rs
    - debug: var=rs['output']['get'][1]['id']

    
    - name: create replicationSession
      replicationSession:
        login:
          unityIP: "{{ host }}"
          username: "{{ username }}"
          password: "{{ password }}"
        create:
          remoteSystem: {'id': "{{ rs['output']['get'][1]['id'] }}"}
          srcResourceId: "{{ nasServer_id217['output']['get'][0]['id'] }}"
          dstResourceId: "{{ nasServer_id218['output']['get'][0]['id'] }}"
          maxTimeOutOfSync: 5
          #max time to wait before sync
      register: file_system_create_results
    - debug: var=file_system_create_results['output']